#########################
#   　App  (1/3)         #
#########################
zfile:
  debug: true
  webdav: false
  directLinkPrefix: directlink
  log:
    path: ${user.home}/.zfile/logs
  db:
    path: ${user.home}/.zfile/db/zfile
    port: 8043
  tmp:
    path: ${user.home}/.zfile/tmp
  cache:
    auto-refresh:
      interval: 1
    timeout: 1800
  constant:
    readme: readme.md
    password: password.txt
  preview:
    audio:
      maxFileSizeMb: 5
    text:
      maxFileSizeKb: 512
  onedrive:
    clientId: 09939809-c617-43c8-a220-a93c1513c5d4
    clientSecret: _l:zI-_yrW75lV8M61K@z.I2K@B/On6Q
    redirectUri: https://zfile.jun6.net/onedrive/callback
    scope: offline_access User.Read Files.ReadWrite.All
  onedrive-china:
    clientId: 4a72d927-1907-488d-9eb2-1b465c53c1c5
    clientSecret: Y9CEA=82da5n-y_]KAWAgLH3?R9xf7Uw
    redirectUri: https://zfile.jun6.net/onedrive/china-callback
    scope: offline_access User.Read Files.ReadWrite.All

#########################
#  Server  (2/3)        #
#########################
server:
  ## port: 8080
  port: 5000   # AWS Elastic Beanstalkに利用する
  servlet:
    context-path: ''
  tomcat:
    threads:
      max: 20
  compression:
    enabled: true

#########################
#  Spring  (3/3)        #
#########################
spring:
  ## H2 for debug tool
  #h2:
    #console:
    #  settings:
    #    web-allow-others: true
    #  path: /h2-console
    #  enabled: ${zfile.debug}
  
  ## Connection
  datasource:
    ### JDBC 基本設定
    username: zfile
    password: 123456
    driver-class-name: org.h2.Driver
    url: jdbc:h2:${zfile.db.path}
    # url: jdbc:h2:mem:zfile  # ←インメモリDB
    platform: h2 
     
    # druid on/off
    #type: com.alibaba.druid.pool.DruidDataSource

    ### MySQL 配置
     # driver-class-name: com.mysql.jdbc.Driver
     # url: jdbc:mysql://127.0.0.1:3306/zfile?characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
     # username: javaapp
     # password: Javaapp_1123
    
    ### druid setting
    druid:
      # 配置初始化大小、最小、最大
      initial-size: 5
      minIdle: 10
      max-active: 20
      # 配置获取连接等待超时的时间(单位：毫秒)
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      max-evictable-idle-time-millis: 900000
      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql
      #OFF> validationQuery: select 1
      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用
      testWhileIdle: true
      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的
      testOnBorrow: false
      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      poolPreparedStatements: true
      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
      # 可以把这个数值配置大一些，比如说100
      maxOpenPreparedStatements: 20
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keepAlive: true
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "com.springboot.template.dao.*"
      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########
      filters: stat,wall,log4j2
      # 自己配置监控统计拦截的filter
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          db-type: h2
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
        # 日志监控，使用slf4j 进行日志输出
        slf4j:
          enabled: true
          statement-log-error-enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
      web-stat-filter:
        enabled: true                   # 启动 StatFilter
        url-pattern: /* # 过滤所有url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
        session-stat-enable: true       # 开启session统计功能
        session-stat-max-count: 1000 # session的最大个数,默认100
      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
      stat-view-servlet:
        enabled: true                   # 启用StatViewServlet
        url-pattern: /druid/* # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        reset-enable: false              # 不允许清空统计数据,重新计算
        login-username: admin # 配置监控页面访问密码
        login-password: P@ssw0rd
        allow:  # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
        deny: # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
    
  ## JSON
  jackson:
    date-format: yyyy-MM-dd HH:mm
    time-zone: GMT+8
  
  ## JPA
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      javax:
        persistence:
          schema-generation:
            create-source: metadata
            scripts:
              action: create
              create-target: create.sql
      hibernate:
        format_sql: false
    # Show SQL statement
    show-sql: true
    generate-ddl: true
    # 初期化順序を、Hibernate → SQLにします
    defer-datasource-initialization: true

  ## Profile
  profiles:
    active: prod

  ## Initialize data import
  sql:
    init:
      continue-on-error: true
      mode: always
      data-locations: classpath*:db/*data.sql
      encoding: utf-8


##########################
#                        #
##########################
logging:
  level:
    org:
      hibernate:
        SQL:
          TRACE
        type:
          descriptor:
            sql:
              BasicBinder:
                TRACE

#########################
#  APM  (9/9)           #
#########################
javamelody:
  # Enable JavaMelody auto-configuration (optional, default: true)
  enabled: true
  # Data source names to exclude from monitoring (optional, comma-separated)
  excluded-datasources: secretSource,topSecretSource
  # Enable monitoring of Spring services and controllers (optional, default: true)
  spring-monitoring-enabled: true
  # Initialization parameters for JavaMelody (optional)
  # See: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters
  init-parameters:
    # log http requests:
    log: true
    # to exclude images, css, fonts and js urls from the monitoring:
    url-exclude-pattern: (/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)
    # to aggregate digits in http requests:
    #http-transform-pattern: \d+
    # to add basic auth:
    authorized-users: admin:P@ssw0rd
    # to change the default storage directory:
    storage-directory: ${user.home}/.zfile/javamelody
    # to change the default "/monitoring" path:
    #monitoring-path: /admin/performance